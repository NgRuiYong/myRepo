@model DriverManagementWebApp.Models.DeliveryViewModel

@{
    ViewBag.Title = "Create";
}
@{ 
    if (Model.Delivery.Delivery_Driver_ID == null )
    {
        <h2>Parcel</h2>
    }
    else
    {
        <h2>Delivery</h2>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--Parcel Info-->
        @*<div class="form-group">
                @Html.LabelFor(model => model.Delivery.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Delivery.Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Delivery.Status, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery.ParcelID, "Parcel ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Delivery.ParcelID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Delivery.ParcelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery.CustomerContactNo, "Customer Contact No.", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Delivery.CustomerContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Delivery.CustomerContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Delivery.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Delivery.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row" style="@(Model.Delivery.Delivery_Driver_ID == null ? "" : "display:none")">
            <div class="col-sm-12">
                <label class="control-label">Add Delivery Info?</label>
                <input type="checkbox" class="input-sm" id="chkDelivery" onchange="DeliveryInfo();" />
            </div>
        </div>
        <br />
        <div class="row" id="deliveryInfo" style="@(Model.Delivery.Delivery_Driver_ID != null ? "" : "display:none")">
            <!--Delivery Info-->
            <div class="form-group">
                @Html.LabelFor(model => model.Delivery.Delivery_Driver_ID, "Select Driver", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Delivery_Driver_ID", null, htmlAttributes: new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Delivery.Delivery_Driver_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Delivery.Delivery_DispatchManager_ID, "Delivery_DispatchManager_ID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Delivery_DispatchManager_ID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Delivery.Delivery_DispatchManager_ID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Delivery.DeliveryDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Delivery.DeliveryDateTime, new { htmlAttributes = new { @class = "form-control", @id = "datetimepicker" } })
                    @Html.ValidationMessageFor(model => model.Delivery.DeliveryDateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Delivery.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Delivery.Address, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Delivery.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NotifyMe, "Notify Me" ,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.NotifyMe, htmlAttributes: new { @class = "form-control"})
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#datetimepicker').datetimepicker({
            format: 'DD/MM/YYYY HH:mm'
        });
    });
    function DeliveryInfo()
    {
        $('#deliveryInfo').toggle();
    }
</script>